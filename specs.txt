


DONE:
---------------------------------------------------------------

* plugin architecture
  - pass commandline args to plugin

* state machine

* eventing system
  - using python decorators?
  - grouped into the different blurb subsystems:
   - hardware
   - gui
   - osc

* basics
  - twisted logging 
  - --debug flag toggles log level
  - restart on crash 
  
* usage: blurb [blurb options] <plugin> [plugin options]



TO DO:
---------------------------------------------------------------

* graphics display (clutter), easy fullscreen
* graphics widget library (mxpy)
* onscreen keyboard
* GUI window
  - system status area
  - log area


hardware.pnp       -- plug & play of devices
hardware.protocols -- various hardware protocols

monitors
 - network
 - power


* hardware detection plug and play
  - serial ports
  - webcams
  - rfid readers
  - HID devices
  - automatic mapping of detected hardware onto service classes;
    protocol sniffing / probing for serial devices

* remote control (OSC)
  standard interface into the machine state and connected devices

* system sanity checking
  - internet connection
  - power connection
  - easy-to-write custom sanity checks

* easy to write and plug own services
  - based on hardware

